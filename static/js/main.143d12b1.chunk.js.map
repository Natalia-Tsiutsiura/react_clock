{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockdate","Date","timer","this","window","setInterval","tick","prevName","clockName","props","console","debug","clearInterval","setState","info","toUTCString","slice","className","React","Component","getRandomName","value","now","toString","App","isVisible","timerId","hasClock","hideClock","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,UAAW,IAAIC,KACfC,MAAO,GAHX,uDAME,WAAqB,IAAD,OAClBC,KAAKJ,MAAMG,MAAQE,OAAOC,aACxB,kBAAM,EAAKC,SACX,OATN,gCAaE,SAAmBC,GACbA,EAASC,YAAcL,KAAKM,MAAMD,WAEpCE,QAAQC,MAAR,uBAA8BJ,EAA9B,qBAAmDJ,KAAKM,MAAMD,cAhBpE,kCAoBE,WACEJ,OAAOQ,cAAcT,KAAKJ,MAAMG,SArBpC,kBAwBE,WACEC,KAAKU,SAAS,CACZb,UAAW,IAAIC,OAIjBS,QAAQI,KAAKX,KAAKJ,MAAMC,UAAUe,cAAcC,OAAO,IAAK,MA9BhE,oBAiCE,WACE,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,KAAKM,MAAMD,YAGb,YAED,sBAAMS,UAAU,cAAhB,SACGd,KAAKJ,MAAMC,UAAUe,cAAcC,OAAO,IAAK,YA3C1D,GAA2BE,IAAMC,WCDjC,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,GAGX,IAAMG,EAAb,4MACEzB,MAAe,CACbS,UAAW,UACXiB,WAAW,EACXC,QAAS,GAJb,EAyBEC,SAAW,WACT,EAAKd,SAAS,CAAEY,WAAW,KA1B/B,EA6BEG,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAKjB,SAAS,CAAEY,WAAW,KAhC/B,uDAOE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe7B,KAAKyB,WAC9CG,SAASC,iBAAiB,QAAS7B,KAAKwB,UAExCxB,KAAKJ,MAAM2B,QAAUtB,OAAOC,aAAY,WACtC,EAAKQ,SAAS,CACZL,UAAWY,QAEZ,QAfP,kCAkBE,WACEW,SAASE,oBAAoB,cAAe9B,KAAKyB,WACjDG,SAASE,oBAAoB,QAAS9B,KAAKwB,UAE3CvB,OAAOQ,cAAcT,KAAKJ,MAAM2B,WAtBpC,oBAmCE,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECd,KAAKJ,MAAM0B,WAER,cAAC,EAAD,CACEjB,UAAWL,KAAKJ,MAAMS,mBA3CpC,GAAyBU,IAAMC,WCb/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.143d12b1.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  clockdate: Date,\n  timer: number,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    clockdate: new Date(),\n    timer: 0,\n  };\n\n  componentDidMount() {\n    this.state.timer = window.setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevName: Props): void {\n    if (prevName.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to Clock-${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.state.timer);\n  }\n\n  tick() {\n    this.setState({\n      clockdate: new Date(),\n    });\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.clockdate.toUTCString().slice(-12, -4));\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.clockdate.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\ntype State = {\n  clockName: string,\n  isVisible: boolean;\n  timerId: number;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state: State = {\n    clockName: 'Clock-0',\n    isVisible: true,\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.hasClock);\n\n    this.state.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.hasClock);\n\n    window.clearInterval(this.state.timerId);\n  }\n\n  hasClock = () => {\n    this.setState({ isVisible: true });\n  };\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ isVisible: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isVisible\n          && (\n            <Clock\n              clockName={this.state.clockName}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}